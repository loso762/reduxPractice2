{"ast":null,"code":"import { uiSliceActions } from \"./ui-slice\";\nconst fetchCartData = () => {\n  return dispatch => {\n    const ferchData = async () => {};\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiSliceActions.shownotification({\n      status: \"pending\",\n      title: \"sending..\",\n      message: \"sending cart data!\"\n    }));\n    const sendReqest = async () => {\n      const response = await fetch(\"https://reduxproject-3fcae-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response) {\n        throw new Error(\"오류\");\n      }\n    };\n    try {\n      await sendReqest();\n      dispatch(uiSliceActions.shownotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiSliceActions.shownotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiSliceActions","fetchCartData","dispatch","ferchData","sendCartData","cart","shownotification","status","title","message","sendReqest","response","fetch","method","body","JSON","stringify","Error","error"],"sources":["/Users/kihun/Desktop/연습/reduxPractice2/src/store/cart-actions.js"],"sourcesContent":["import { uiSliceActions } from \"./ui-slice\";\n\nconst fetchCartData = () => {\n  return (dispatch) => {\n    const ferchData = async () => {};\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiSliceActions.shownotification({\n        status: \"pending\",\n        title: \"sending..\",\n        message: \"sending cart data!\",\n      })\n    );\n\n    const sendReqest = async () => {\n      const response = await fetch(\n        \"https://reduxproject-3fcae-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response) {\n        throw new Error(\"오류\");\n      }\n    };\n\n    try {\n      await sendReqest();\n\n      dispatch(\n        uiSliceActions.shownotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiSliceActions.shownotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAQC,QAAQ,IAAK;IACnB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY,CAAC,CAAC;EAClC,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOH,QAAQ,IAAK;IACzBA,QAAQ,CACNF,cAAc,CAACM,gBAAgB,CAAC;MAC9BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,WAAW;MAClBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAAkE,EAClE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CAAC,CACF;MAED,IAAI,CAACM,QAAQ,EAAE;QACb,MAAM,IAAIM,KAAK,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;IAED,IAAI;MACF,MAAMP,UAAU,EAAE;MAElBR,QAAQ,CACNF,cAAc,CAACM,gBAAgB,CAAC;QAC9BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdhB,QAAQ,CACNF,cAAc,CAACM,gBAAgB,CAAC;QAC9BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}